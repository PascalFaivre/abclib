<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>


<c74object name="abc.rissetsbell~" module="abclib">
  <digest>Abclib's Risset's bell synthesis</digest>
  <description><o>abc.rissetsbell~</o> provides a bell synthesis according to Risset's bell model. It is based on 11 layouts with oscillators and envelopes. In our implementation, the model is extended with a double oscillator that enables detuning and a filter that inverts the behavior (possible crossfade between synthesis and filtering) using the osc2filter parameter. 
  <br /><br /></description>

  <!--INLETS-->
  <!-- <inletlist>
    <inlet id="0" type="INLET_TYPE">
      <digest></digest>
      <description></description>
    </inlet>
  </inletlist> -->

  <!--OUTLETS-->
  <!-- <outletlist>
    <outlet id="0" type="OUTLET_TYPE">
      <digest></digest>
      <description></description>
    </outlet>
  </outletlist> -->

  <objarglist>
  </objarglist>

  <!--ATTRIBUTES-->
  <attributelist>
  </attributelist>

  <!--MESSAGES-->
  <methodlist>
    <method name="dur">
      <arglist>
        <arg type="float" />
      </arglist>
      <description>sets the duration of the bell synthesis in ms.[init=440:min=1:max=10000:step=0.01].</description>
      <digest>sets the duration of the bell synthesis in ms</digest>
    </method>
    <method name="gain">
      <arglist>
        <arg type="float" />
      </arglist>
      <description>sets gain of the bell synthesis in dB. [init=0:min=-127:max=18:step=0.01].</description>
      <digest>sets gain of the bell synthesis in dB</digest>
    </method>
    <method name="gate">
      <arglist>
        <arg type="boolean" />
      </arglist>
      <description>trigger the bell synthesis.</description>
      <digest>trigger the bell synthesis</digest>
    </method>
    <method name="osc2filter">
      <arglist>
        <arg type="float" />
      </arglist>
      <description>sets the phase of the crossfade between synthesis and filtering.[init=0:min=0:max=1:step=0.01]</description>
      <digest>sets the phase of the crossfade between synthesis and filtering</digest>
    </method>
    <method name="resg">
      <arglist>
        <arg type="float" />
      </arglist>
      <description>sets the gain of the band-pass filter. [init=0.1:min=0:max=1:step=0.01]</description>
      <digest>sets the gain of the band-pass filter</digest>
    </method>
    <method name="resq">
      <arglist>
        <arg type="float" />
      </arglist>
      <description>sets the quality of the band-pass filter. [init=1000:min=0:max=1000:step=0.1]</description>
      <digest>sets the quality of the band-pass filter</digest>
    </method>
    <method name="freq">
      <arglist>
        <arg type="float" />
      </arglist>
      <description>sets the fondamental frequency of the bell synthesis. [init=440:min=1:max=10000:step=0.01]</description>
      <digest>sets the fondamental frequency of the bell synthesis</digest>
    </method>
    <method name="pfreq">
      <arglist>
        <arg type="float" />
      </arglist>
      <description>sets the amount of detune. [init=1:min=0:max=10:step=0.001]</description>
      <digest>sets the amount of detune</digest>
    </method>
  </methodlist>

  <seealsolist>
    <seealso name="abc.peakamp~" />
    <seealso name="abc.mc.delay~" />
    <seealso name="abc.mc.gain~" />
    <seealso name="abc.mc.addsynth~" />
  </seealsolist>
</c74object>
